@using ServiceStation.Auth
@using System.Security.Claims
@using System.Threading.Tasks
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Identity
@using Microsoft.AspNetCore.Identity.EntityFrameworkCore

@inject SignInManager<ApplicationUser> SignInManager
@inject IAuthorizationService AuthorizationService
@inject UserManager<ApplicationUser> UserManager

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title - ServiceStation</title>
    <link href="~/lib/bootstrap/css/bootstrap.css" rel="stylesheet" />
    <link href="~/lib/font-awesome/css/all.css" rel="stylesheet" />
    <link href="~/css/site.css" rel="stylesheet" />
</head>
<body>
    <nav class="navbar navbar-expand-md navbar-light bg-info">
        <a class="navbar-brand" asp-controller="Home" asp-action="Index">ServiceStation</a>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav mr-auto">
                <li class="nav-item active">
                    <a class="nav-link" asp-controller="Home" asp-action="Index">Home <span class="sr-only">(current)</span></a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link" asp-controller="Shop" asp-action="Index">Shop</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Service</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" asp-controller="Home" asp-action="About">About</a>
                </li>
                @await Component.InvokeAsync("ShoppingCartSummary")
                @if (SignInManager.IsSignedIn(User))// && User.IsInRole("Administrator"))
                {
                    @await Component.InvokeAsync("AdminMenu")
                }
                @await Html.PartialAsync("_LoginPartial")
            </ul>
        </div>
    </nav>

    <div class="container body-content">
        @RenderBody()
        <footer class="border-top footer text-muted">
            <div class="container text-center">
                &copy; 2020 - ServiceStation
            </div>
        </footer>
    </div>
    <script src="~/lib/jquery/jquery.js"></script>
    <script src="~/lib/bootstrap/js/bootstrap.js"></script>
    <script src="~/lib/font-awesome/js/all.js"></script>
    <script src="~/js/index.js"></script>
    @RenderSection("Scripts", required: false)
</body>
</html>
